// This file is automatically generated by Keystone, do not modify it manually.
// Modify your Keystone config when you want to change this.

datasource sqlite {
  url               = env("DATABASE_URL")
  shadowDatabaseUrl = env("SHADOW_DATABASE_URL")
  provider          = "sqlite"
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id        String    @id @default(cuid())
  firstName String    @default("")
  lastName  String    @default("")
  email     String    @unique @default("")
  password  String
  createdAt DateTime? @default(now())
}

model Country {
  id                 String  @id @default(cuid())
  name               String  @default("")
  code               String  @unique @default("")
  isdCode            String  @default("")
  from_State_country State[] @relation("State_country")
  from_Phone_country Phone[] @relation("Phone_country")
}

model State {
  id              String   @id @default(cuid())
  name            String   @default("")
  code            String   @unique @default("")
  country         Country? @relation("State_country", fields: [countryId], references: [id])
  countryId       String?  @map("country")
  from_City_state City[]   @relation("City_state")

  @@index([countryId])
}

model City {
  id                   String       @id @default(cuid())
  name                 String       @default("")
  state                State?       @relation("City_state", fields: [stateId], references: [id])
  stateId              String?      @map("state")
  areas                PostalCode[] @relation("City_areas")
  from_PostalCode_city PostalCode[] @relation("PostalCode_city")

  @@index([stateId])
}

model PostalCode {
  id                      String    @id @default(cuid())
  code                    String    @unique @default("")
  city                    City?     @relation("PostalCode_city", fields: [cityId], references: [id])
  cityId                  String?   @map("city")
  from_City_areas         City[]    @relation("City_areas")
  from_Address_postalCode Address[] @relation("Address_postalCode")

  @@index([cityId])
}

model Address {
  id           String      @id @default(cuid())
  house        String      @default("")
  street       String      @default("")
  landmark     String      @default("")
  postalCode   PostalCode? @relation("Address_postalCode", fields: [postalCodeId], references: [id])
  postalCodeId String?     @map("postalCode")

  @@index([postalCodeId])
}

model Email {
  id      String @id @default(cuid())
  address String @default("")
}

model Phone {
  id        String   @id @default(cuid())
  number    String   @default("")
  country   Country? @relation("Phone_country", fields: [countryId], references: [id])
  countryId String?  @map("country")

  @@index([countryId])
}

model Person {
  id         String    @id @default(cuid())
  firstName  String    @default("")
  middleName String    @default("")
  lastName   String    @default("")
  dob        String?
  gender     String    @default("")
  createdAt  DateTime? @default(now())
}
